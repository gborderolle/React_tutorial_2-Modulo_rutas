{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\GitHub\\\\React_tutorial_2\\\\URL section\\\\12-adv-starting-project\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\n// import { createBrowserRouter, RouterProvider } from \"react-router-dom\";\n\nimport HomePage from \"./components/HomePage\";\nimport EventsPage from \"./components/EventsPage\";\nimport NewEventPage from \"./components/NewEventPage\";\nimport EventDetailPage from \"./components/EventDetailPage\";\nimport EditEventPage from \"./components/EditEventPage\";\nimport MainNavigation from \"./components/MainNavigation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(MainNavigation, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 14\n  }, this),\n  children: [{\n    path: \"events/:id/edit\",\n    element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 43\n    }, this)\n  }, {\n    path: \"events/:id\",\n    element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 38\n    }, this)\n  }, {\n    path: \"events/new\",\n    element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 38\n    }, this)\n  }, {\n    path: \"events\",\n    element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 34\n    }, this)\n  }, {\n    index: true,\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 31\n    }, this)\n  }, {\n    path: \"*\",\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }, this)\n  }]\n}]);\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["HomePage","EventsPage","NewEventPage","EventDetailPage","EditEventPage","MainNavigation","jsxDEV","_jsxDEV","router","createBrowserRouter","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","App","RouterProvider","_c","$RefreshReg$"],"sources":["D:/Documents/GitHub/React_tutorial_2/URL section/12-adv-starting-project/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\n// import { createBrowserRouter, RouterProvider } from \"react-router-dom\";\n\nimport HomePage from \"./components/HomePage\";\nimport EventsPage from \"./components/EventsPage\";\nimport NewEventPage from \"./components/NewEventPage\";\nimport EventDetailPage from \"./components/EventDetailPage\";\nimport EditEventPage from \"./components/EditEventPage\";\nimport MainNavigation from \"./components/MainNavigation\";\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <MainNavigation />,\n    children: [\n      { path: \"events/:id/edit\", element: <EditEventPage /> },\n      { path: \"events/:id\", element: <EventDetailPage /> },\n      { path: \"events/new\", element: <NewEventPage /> },\n      { path: \"events\", element: <EventsPage /> },\n      { index: true, element: <HomePage /> },\n      { path: \"*\", element: <HomePage /> },\n    ],\n  },\n]);\n\nexport default function App() {\n  return <RouterProvider router={router} />;\n}\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,cAAc,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,MAAM,GAAGC,mBAAmB,CAAC,CACjC;EACEC,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEJ,OAAA,CAACF,cAAc;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAC3BC,QAAQ,EAAE,CACR;IAAEN,IAAI,EAAE,iBAAiB;IAAEC,OAAO,eAAEJ,OAAA,CAACH,aAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EACvD;IAAEL,IAAI,EAAE,YAAY;IAAEC,OAAO,eAAEJ,OAAA,CAACJ,eAAe;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EACpD;IAAEL,IAAI,EAAE,YAAY;IAAEC,OAAO,eAAEJ,OAAA,CAACL,YAAY;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EACjD;IAAEL,IAAI,EAAE,QAAQ;IAAEC,OAAO,eAAEJ,OAAA,CAACN,UAAU;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EAC3C;IAAEE,KAAK,EAAE,IAAI;IAAEN,OAAO,eAAEJ,OAAA,CAACP,QAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC,EACtC;IAAEL,IAAI,EAAE,GAAG;IAAEC,OAAO,eAAEJ,OAAA,CAACP,QAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE,CAAC;AAExC,CAAC,CACF,CAAC;AAEF,eAAe,SAASG,GAAGA,CAAA,EAAG;EAC5B,oBAAOX,OAAA,CAACY,cAAc;IAACX,MAAM,EAAEA;EAAO;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACK,EAAA,GAFuBF,GAAG;AAAA,IAAAE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}